# -*- coding: utf-8 -*-
"""Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xCxmiqHpOmY2PieZ8ClPsHKL9Lm5e_Pd

# **import ibraries**
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

"""# **read dataset**"""

dataset = pd.read_csv("Titanic-Dataset.csv")

"""# **dataset overview**"""

dataset.head()

dataset.tail()

dataset.info()

dataset.describe()

dataset.isnull().sum().sort_values(ascending=False)

"""# **prepare features and lables**

"""

X = dataset.drop(columns=["PassengerId","Survived","Cabin"])
y = dataset['Survived']

X.head()

y.head()

"""# **splitting data into trian and test sets**"""

X_train ,X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=40,stratify=y)

X_train.shape

X_test.shape

y_train.shape

y_test.shape

"""# **take care of missing value**"""

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan,strategy="median")
X_train['Age'] = imputer.fit_transform(X=X_train[['Age']])
X_test['Age'] = imputer.transform(X=X_test[['Age']])

embarked_imputer = SimpleImputer(missing_values=np.nan,strategy="most_frequent")
X_train[['Embarked']] = embarked_imputer.fit_transform(X=X_train[['Embarked']])
X_test[['Embarked']] = embarked_imputer.transform(X=X_test[['Embarked']])

X_train.isnull().sum()

X_train

""" # **encoding categorical data**"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
X_train['Sex'] = le.fit_transform(X_train['Sex'])
X_test['Sex'] = le.transform(X_test['Sex'])

X_train['Sex']

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encode',OneHotEncoder(),['Embarked'])],remainder='passthrough')
X_train_array = ct.fit_transform(X_train)
X_test_array = ct.transform(X_test)
features_name = ct.get_feature_names_out()
X_train = pd.DataFrame(X_train_array,columns = feature_name)
X_test = pd.DataFrame(X_test_array,columns=feature_name)

X_train

X_test

"""# **feature scaling**"""

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train_array[:,6:7] = scaler.fit_transform(X_train_array[:,6:7])
X_test_array[:,6:7] = scaler.transform(X_test_array[:,6:7])

fareScaler = StandardScaler()
X_train_array[:,-1:] = fareScaler.fit_transform(X_train_array[:,-1:])
X_test_array[:,-1:] = fareScaler.transform(X_test_array[:,-1:])

X_train

X_test